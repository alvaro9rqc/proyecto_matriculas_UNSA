// Code generated by goa v3.21.1, DO NOT EDIT.
//
// enrollment endpoints
//
// Command:
// $ goa gen github.com/enrollment/design/api

package enrollment

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "enrollment" service endpoints.
type Endpoints struct {
	Enroll               goa.Endpoint
	GetEnrollmentCourses goa.Endpoint
}

// NewEndpoints wraps the methods of the "enrollment" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Enroll:               NewEnrollEndpoint(s),
		GetEnrollmentCourses: NewGetEnrollmentCoursesEndpoint(s),
	}
}

// Use applies the given middleware to all the "enrollment" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Enroll = m(e.Enroll)
	e.GetEnrollmentCourses = m(e.GetEnrollmentCourses)
}

// NewEnrollEndpoint returns an endpoint function that calls the method
// "enroll" of service "enrollment".
func NewEnrollEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*EnrollmentPayload)
		return nil, s.Enroll(ctx, p)
	}
}

// NewGetEnrollmentCoursesEndpoint returns an endpoint function that calls the
// method "get_enrollment_courses" of service "enrollment".
func NewGetEnrollmentCoursesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.GetEnrollmentCourses(ctx)
	}
}
