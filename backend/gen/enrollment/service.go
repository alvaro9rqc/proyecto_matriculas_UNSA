// Code generated by goa v3.21.0, DO NOT EDIT.
//
// enrollment service
//
// Command:
// $ goa gen github.com/enrollment/design/api

package enrollment

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Gesti贸n de inscripci贸n de asistentes en cursos
type Service interface {
	// Inscribir un asistente en un curso
	Enroll(context.Context, *EnrollmentPayload) (err error)
	// Actualizar el estado de una inscripci贸n
	UpdateEnrollment(context.Context, *UpdateEnrollmentPayload) (err error)
	// Eliminar una inscripci贸n de un asistente en un curso
	DeleteEnrollment(context.Context, *DeleteEnrollmentPayload) (err error)
	// Listar usuarios inscritos en un curso
	ListEnrolledUsers(context.Context, *ListEnrolledUsersPayload) (res []*EnrolledUser, err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "enrollment"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "enrollment"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"enroll", "update_enrollment", "delete_enrollment", "list_enrolled_users"}

// DeleteEnrollmentPayload is the payload type of the enrollment service
// delete_enrollment method.
type DeleteEnrollmentPayload struct {
	// ID del asistente
	AttendeeID int32
	// ID del curso
	CourseID int32
}

// Datos de usuario inscrito
type EnrolledUser struct {
	FirstName      string
	RemainingNames *string
	LastNames      string
	Email          string
}

// EnrollmentPayload is the payload type of the enrollment service enroll
// method.
type EnrollmentPayload struct {
	// ID del asistente
	AttendeeID int32
	// ID del curso
	CourseID int32
	// Si el curso fue aprobado
	Passed bool
}

// ListEnrolledUsersPayload is the payload type of the enrollment service
// list_enrolled_users method.
type ListEnrolledUsersPayload struct {
	// ID del curso
	CourseID int32
}

// UpdateEnrollmentPayload is the payload type of the enrollment service
// update_enrollment method.
type UpdateEnrollmentPayload struct {
	// ID del asistente
	AttendeeID int32
	// ID del curso
	CourseID int32
	// Nuevo estado aprobado
	Passed bool
}

// MakeNotFound builds a goa.ServiceError from an error.
func MakeNotFound(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "not_found", false, false, false)
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "bad_request", false, false, false)
}
