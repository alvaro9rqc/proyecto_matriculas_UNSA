// Code generated by goa v3.21.0, DO NOT EDIT.
//
// Auth endpoints
//
// Command:
// $ goa gen github.com/enrollment/design/api

package auth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "Auth" service endpoints.
type Endpoints struct {
	Me             goa.Endpoint
	GoogleLogin    goa.Endpoint
	GoogleLogout   goa.Endpoint
	GoogleCallback goa.Endpoint
}

// NewEndpoints wraps the methods of the "Auth" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Me:             NewMeEndpoint(s),
		GoogleLogin:    NewGoogleLoginEndpoint(s),
		GoogleLogout:   NewGoogleLogoutEndpoint(s),
		GoogleCallback: NewGoogleCallbackEndpoint(s),
	}
}

// Use applies the given middleware to all the "Auth" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Me = m(e.Me)
	e.GoogleLogin = m(e.GoogleLogin)
	e.GoogleLogout = m(e.GoogleLogout)
	e.GoogleCallback = m(e.GoogleCallback)
}

// NewMeEndpoint returns an endpoint function that calls the method "Me" of
// service "Auth".
func NewMeEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Me(ctx)
	}
}

// NewGoogleLoginEndpoint returns an endpoint function that calls the method
// "Google login" of service "Auth".
func NewGoogleLoginEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return nil, s.GoogleLogin(ctx)
	}
}

// NewGoogleLogoutEndpoint returns an endpoint function that calls the method
// "Google logout" of service "Auth".
func NewGoogleLogoutEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return nil, s.GoogleLogout(ctx)
	}
}

// NewGoogleCallbackEndpoint returns an endpoint function that calls the method
// "GoogleCallback" of service "Auth".
func NewGoogleCallbackEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return nil, s.GoogleCallback(ctx)
	}
}
