// Code generated by goa v3.21.0, DO NOT EDIT.
//
// Auth client
//
// Command:
// $ goa gen github.com/enrollment/design/api

package auth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Auth" service client.
type Client struct {
	MeEndpoint             goa.Endpoint
	GoogleLoginEndpoint    goa.Endpoint
	GoogleLogoutEndpoint   goa.Endpoint
	GoogleCallbackEndpoint goa.Endpoint
}

// NewClient initializes a "Auth" service client given the endpoints.
func NewClient(me, googleLogin, googleLogout, googleCallback goa.Endpoint) *Client {
	return &Client{
		MeEndpoint:             me,
		GoogleLoginEndpoint:    googleLogin,
		GoogleLogoutEndpoint:   googleLogout,
		GoogleCallbackEndpoint: googleCallback,
	}
}

// Me calls the "Me" endpoint of the "Auth" service.
func (c *Client) Me(ctx context.Context) (res *AccountUser, err error) {
	var ires any
	ires, err = c.MeEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*AccountUser), nil
}

// GoogleLogin calls the "Google login" endpoint of the "Auth" service.
func (c *Client) GoogleLogin(ctx context.Context) (err error) {
	_, err = c.GoogleLoginEndpoint(ctx, nil)
	return
}

// GoogleLogout calls the "Google logout" endpoint of the "Auth" service.
func (c *Client) GoogleLogout(ctx context.Context) (err error) {
	_, err = c.GoogleLogoutEndpoint(ctx, nil)
	return
}

// GoogleCallback calls the "GoogleCallback" endpoint of the "Auth" service.
func (c *Client) GoogleCallback(ctx context.Context) (err error) {
	_, err = c.GoogleCallbackEndpoint(ctx, nil)
	return
}
