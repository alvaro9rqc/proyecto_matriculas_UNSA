// Code generated by goa v3.21.1, DO NOT EDIT.
//
// oauth client
//
// Command:
// $ goa gen github.com/enrollment/design/api

package oauth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "oauth" service client.
type Client struct {
	RedirectEndpoint goa.Endpoint
	CallbackEndpoint goa.Endpoint
	LogoutEndpoint   goa.Endpoint
	MeEndpoint       goa.Endpoint
}

// NewClient initializes a "oauth" service client given the endpoints.
func NewClient(redirect, callback, logout, me goa.Endpoint) *Client {
	return &Client{
		RedirectEndpoint: redirect,
		CallbackEndpoint: callback,
		LogoutEndpoint:   logout,
		MeEndpoint:       me,
	}
}

// Redirect calls the "redirect" endpoint of the "oauth" service.
// Redirect may return the following errors:
//   - "invalid_provider" (type *goa.ServiceError): Unsupported OAuth provider
//   - error: internal error
func (c *Client) Redirect(ctx context.Context, p *RedirectPayload) (res *OAuthRedirectResult, err error) {
	var ires any
	ires, err = c.RedirectEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*OAuthRedirectResult), nil
}

// Callback calls the "callback" endpoint of the "oauth" service.
// Callback may return the following errors:
//   - "invalid_token" (type *goa.ServiceError): Invalid or expired OAuth token
//   - "server_error" (type *goa.ServiceError): Internal server error
//   - error: internal error
func (c *Client) Callback(ctx context.Context, p *CallbackPayload) (res *LoginResult, err error) {
	var ires any
	ires, err = c.CallbackEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*LoginResult), nil
}

// Logout calls the "logout" endpoint of the "oauth" service.
// Logout may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): Missing or invalid token
//   - error: internal error
func (c *Client) Logout(ctx context.Context, p *LogoutPayload) (err error) {
	_, err = c.LogoutEndpoint(ctx, p)
	return
}

// Me calls the "me" endpoint of the "oauth" service.
// Me may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): Unauthorized access
//   - error: internal error
func (c *Client) Me(ctx context.Context) (res *AccountUser, err error) {
	var ires any
	ires, err = c.MeEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*AccountUser), nil
}
