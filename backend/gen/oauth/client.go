// Code generated by goa v3.21.0, DO NOT EDIT.
//
// oauth client
//
// Command:
// $ goa gen github.com/enrollment/design/api

package oauth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "oauth" service client.
type Client struct {
	ListProvidersEndpoint goa.Endpoint
	LoginEndpoint         goa.Endpoint
}

// NewClient initializes a "oauth" service client given the endpoints.
func NewClient(listProviders, login goa.Endpoint) *Client {
	return &Client{
		ListProvidersEndpoint: listProviders,
		LoginEndpoint:         login,
	}
}

// ListProviders calls the "list_providers" endpoint of the "oauth" service.
func (c *Client) ListProviders(ctx context.Context) (res []*OAuthProvider, err error) {
	var ires any
	ires, err = c.ListProvidersEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*OAuthProvider), nil
}

// Login calls the "login" endpoint of the "oauth" service.
// Login may return the following errors:
//   - "unauthorized" (type *goa.ServiceError): Invalid or expired code
//   - "not_found" (type *goa.ServiceError): Not registered provider
//   - error: internal error
func (c *Client) Login(ctx context.Context, p *LoginPayload) (res *UserOauthInfo, err error) {
	var ires any
	ires, err = c.LoginEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UserOauthInfo), nil
}
