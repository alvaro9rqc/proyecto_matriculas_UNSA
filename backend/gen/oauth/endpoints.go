// Code generated by goa v3.21.0, DO NOT EDIT.
//
// oauth endpoints
//
// Command:
// $ goa gen github.com/enrollment/design/api

package oauth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "oauth" service endpoints.
type Endpoints struct {
	ListProviders goa.Endpoint
	Login         goa.Endpoint
}

// NewEndpoints wraps the methods of the "oauth" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ListProviders: NewListProvidersEndpoint(s),
		Login:         NewLoginEndpoint(s),
	}
}

// Use applies the given middleware to all the "oauth" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ListProviders = m(e.ListProviders)
	e.Login = m(e.Login)
}

// NewListProvidersEndpoint returns an endpoint function that calls the method
// "list_providers" of service "oauth".
func NewListProvidersEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.ListProviders(ctx)
	}
}

// NewLoginEndpoint returns an endpoint function that calls the method "login"
// of service "oauth".
func NewLoginEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*LoginPayload)
		return s.Login(ctx, p)
	}
}
