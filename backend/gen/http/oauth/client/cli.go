// Code generated by goa v3.21.0, DO NOT EDIT.
//
// oauth HTTP client CLI support package
//
// Command:
// $ goa gen github.com/enrollment/design/api

package client

import (
	"encoding/json"
	"fmt"
	"unicode/utf8"

	oauth "github.com/enrollment/gen/oauth"
	goa "goa.design/goa/v3/pkg"
)

// BuildLoginPayload builds the payload for the oauth login endpoint from CLI
// flags.
func BuildLoginPayload(oauthLoginBody string) (*oauth.LoginPayload, error) {
	var err error
	var body LoginRequestBody
	{
		err = json.Unmarshal([]byte(oauthLoginBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"code\": \"ryc\",\n      \"oauth_provider_id\": 5959512667628956629\n   }'")
		}
		if body.OauthProviderID < 1 {
			err = goa.MergeErrors(err, goa.InvalidRangeError("body.oauth_provider_id", body.OauthProviderID, 1, true))
		}
		if utf8.RuneCountInString(body.Code) < 10 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.code", body.Code, utf8.RuneCountInString(body.Code), 10, true))
		}
		if err != nil {
			return nil, err
		}
	}
	v := &oauth.LoginPayload{
		OauthProviderID: body.OauthProviderID,
		Code:            body.Code,
	}

	return v, nil
}
