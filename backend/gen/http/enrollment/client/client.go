// Code generated by goa v3.21.0, DO NOT EDIT.
//
// enrollment client HTTP transport
//
// Command:
// $ goa gen github.com/enrollment/design/api

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the enrollment service endpoint HTTP clients.
type Client struct {
	// Enroll Doer is the HTTP client used to make requests to the enroll endpoint.
	EnrollDoer goahttp.Doer

	// GetEnrollmentCourses Doer is the HTTP client used to make requests to the
	// get_enrollment_courses endpoint.
	GetEnrollmentCoursesDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the enrollment service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		EnrollDoer:               doer,
		GetEnrollmentCoursesDoer: doer,
		RestoreResponseBody:      restoreBody,
		scheme:                   scheme,
		host:                     host,
		decoder:                  dec,
		encoder:                  enc,
	}
}

// Enroll returns an endpoint that makes HTTP requests to the enrollment
// service enroll server.
func (c *Client) Enroll() goa.Endpoint {
	var (
		encodeRequest  = EncodeEnrollRequest(c.encoder)
		decodeResponse = DecodeEnrollResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildEnrollRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.EnrollDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("enrollment", "enroll", err)
		}
		return decodeResponse(resp)
	}
}

// GetEnrollmentCourses returns an endpoint that makes HTTP requests to the
// enrollment service get_enrollment_courses server.
func (c *Client) GetEnrollmentCourses() goa.Endpoint {
	var (
		decodeResponse = DecodeGetEnrollmentCoursesResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetEnrollmentCoursesRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetEnrollmentCoursesDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("enrollment", "get_enrollment_courses", err)
		}
		return decodeResponse(resp)
	}
}
