// Code generated by goa v3.21.1, DO NOT EDIT.
//
// enrollment HTTP client CLI support package
//
// Command:
// $ goa gen github.com/enrollment/design/api

package client

import (
	"encoding/json"
	"fmt"

	enrollment "github.com/enrollment/gen/enrollment"
	goa "goa.design/goa/v3/pkg"
)

// BuildEnrollPayload builds the payload for the enrollment enroll endpoint
// from CLI flags.
func BuildEnrollPayload(enrollmentEnrollBody string) (*enrollment.EnrollmentPayload, error) {
	var err error
	var body EnrollRequestBody
	{
		err = json.Unmarshal([]byte(enrollmentEnrollBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"enrollCourses\": [\n         {\n            \"course_id\": 1304883946,\n            \"id\": 148943620,\n            \"program_id\": 1307531092\n         },\n         {\n            \"course_id\": 1304883946,\n            \"id\": 148943620,\n            \"program_id\": 1307531092\n         },\n         {\n            \"course_id\": 1304883946,\n            \"id\": 148943620,\n            \"program_id\": 1307531092\n         },\n         {\n            \"course_id\": 1304883946,\n            \"id\": 148943620,\n            \"program_id\": 1307531092\n         }\n      ]\n   }'")
		}
		if body.EnrollCourses == nil {
			err = goa.MergeErrors(err, goa.MissingFieldError("enrollCourses", "body"))
		}
		if err != nil {
			return nil, err
		}
	}
	v := &enrollment.EnrollmentPayload{}
	if body.EnrollCourses != nil {
		v.EnrollCourses = make([]*enrollment.EnrollCourseType, len(body.EnrollCourses))
		for i, val := range body.EnrollCourses {
			v.EnrollCourses[i] = marshalEnrollCourseTypeRequestBodyToEnrollmentEnrollCourseType(val)
		}
	} else {
		v.EnrollCourses = []*enrollment.EnrollCourseType{}
	}

	return v, nil
}
