// Code generated by goa v3.21.0, DO NOT EDIT.
//
// Auth HTTP server types
//
// Command:
// $ goa gen github.com/enrollment/design/api

package server

import (
	auth "github.com/enrollment/gen/auth"
)

// MeOKResponseBody is the type of the "Auth" service "Me" endpoint HTTP
// response body.
type MeOKResponseBody struct {
	// Unique user ID
	ID string `form:"id" json:"id" xml:"id"`
	// User email
	Email string `form:"email" json:"email" xml:"email"`
	// User first name
	FirstName string `form:"firstName" json:"firstName" xml:"firstName"`
	// User last names
	LastNames string `form:"lastNames" json:"lastNames" xml:"lastNames"`
	// User remaining names
	RemainingNames string `form:"remainingNames" json:"remainingNames" xml:"remainingNames"`
	// User attendee group name
	AttendeeGroupName string `form:"attendeeGroupName" json:"attendeeGroupName" xml:"attendeeGroupName"`
	// User attendee group priority
	AttendeeGroupPriority string `form:"attendeeGroupPriority" json:"attendeeGroupPriority" xml:"attendeeGroupPriority"`
}

// NewMeOKResponseBody builds the HTTP response body from the result of the
// "Me" endpoint of the "Auth" service.
func NewMeOKResponseBody(res *auth.AccountUser) *MeOKResponseBody {
	body := &MeOKResponseBody{
		ID:                    res.ID,
		Email:                 res.Email,
		FirstName:             res.FirstName,
		LastNames:             res.LastNames,
		RemainingNames:        res.RemainingNames,
		AttendeeGroupName:     res.AttendeeGroupName,
		AttendeeGroupPriority: res.AttendeeGroupPriority,
	}
	return body
}
