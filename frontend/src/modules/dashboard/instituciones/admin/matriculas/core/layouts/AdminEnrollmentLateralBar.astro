---
import type { AuthRequired, User } from '@/modules/auth/core/types/user';
import { capitalize } from '@/modules/core/lib/utils';
import Button from '@/modules/core/ui/button.astro';
import LogoExtended from '@/modules/core/ui/LogoExtended.astro';
import { DASHBOARD_ADMIN_INSTITUTION_ENROLLMENT_ROUTE } from '../lib/routes';

// Por ahora solo se requerira un usuario autenticado, ya que el usuario en la base de datos no tiene un rol como campo
// Puede comportarse como un administrador o un usuario normal, dependiendo de la institucion a la que pertenezca
type Props = AuthRequired<User>;

const { user } = Astro.props;

const adminOptions = DASHBOARD_ADMIN_INSTITUTION_ENROLLMENT_ROUTE.sub;
---
<aside class="flex-initial basis-54 px-2 py-4 sticky top-0 h-screen bg-background gap-6 flex flex-col items-center justify-between overflow-y-auto">
  <div class="flex flex-col items-center gap-4 w-full">
    <LogoExtended size="lg"/>
    <nav class="flex flex-col gap-1 w-full">
      {
        adminOptions?.map((option) =>
          <Button
            as="a"
            variant="ghost"
            size="lg"
            class="w-full justify-start text-left"
            href={option.fullPath}
          >
            {option.icon && <option.icon class="w-5 h-5 mr-2" />}
            <span>{capitalize(option.path || '')}</span>
          </Button>
        )
      }
    </nav>
  </div>
  <div class="min-h-12 flex flex-col gap-4 w-full">
    <div class="flex flex-col items-center gap-2">
      <Button class="size-15 rounded-full" variant="outline" size="icon">
          <span class="sr-only">Personal photo</span>
          <img
            class="size-full object-cover rounded-full"
            src={user.avatar_url}
            alt="User profile"
          />
      </Button>
      <div class="flex flex-col items-center">
        <span class="font-medium">{user.name}</span>
        <span class="text-sm text-muted-foreground">{user.email}</span>
      </div>
    </div>
    <Button variant="ghost" id="logout-button" class="w-full">
      Cerrar sesi√≥n
    </Button>
  </div>
</aside>
<script>
import { LANDING_ROUTE } from '@/modules/landing/core/lib/routes';
import { actions } from 'astro:actions';
import { navigate } from 'astro:transitions/client';

const logoutButton = document.getElementById('logout-button');
logoutButton?.addEventListener('click', async () => {
  const { error } = await actions.user.logout();
  if (error) {
    console.error('Logout failed:', error);
  } else {
    console.log(
      'Session has been closed, redirect to: ',
      LANDING_ROUTE.fullPath,
    );
    await navigate(LANDING_ROUTE.fullPath);
  }
});
</script>
